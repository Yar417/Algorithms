'''
реализовать класс multifilter, который будет выполнять ту же функцию, что и стандартный класс filter, но будет использовать не одну функцию, а несколько.

Решение о допуске элемента будет приниматься на основании того, сколько функций допускают этот элемент, и сколько не допускают. Обозначим эти количества за pos и neg.

Введем понятие решающей функции – это функция, которая принимает два аргумента – количества pos и neg, и возвращает True, если элемент допущен, и False иначе.
'''

class multifilter:
    def judge_half(pos, neg):
        if pos >= neg:
            return True

    def judge_any(pos, neg):
        if pos >= 1:
            return True

    def judge_all(pos, neg):
        if neg == 0:
            return True

    def __init__(self, iterable, *funcs, judge=judge_any):
        self.iterable = iterable
        self.funcs = funcs
        self.judge = judge

    def __iter__(self):
        for i in self.iterable:
            pos = 0
            neg = 0
            for fun in self.funcs:
                if fun(i) is True:
                    pos += 1
                else:
                    neg += 1
            if self.judge(pos, neg) == True:
                yield i
